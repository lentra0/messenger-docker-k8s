name: Deploy Messenger to Kubernetes

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE: ghcr.io/lentra0/messenger-docker-k8s-backend
  FRONTEND_IMAGE: ghcr.io/lentra0/messenger-docker-k8s-frontend

jobs:
  setup-cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y conntrack socat

    - name: Install Minikube and kubectl
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install kubectl /usr/local/bin/kubectl

    - name: Start Minikube cluster (with retry)
      run: |
        for i in {1..3}; do
          minikube start --driver=docker --force && break || sleep 10
        done
        minikube status || minikube logs

    - name: Prepare kubeconfig
      id: kubeconfig
      run: |
        mkdir -p ~/.kube
        # Wait for cluster to be fully ready
        sleep 15
        minikube kubectl -- config view > ~/.kube/config
        kubectl config use-context minikube
        kubectl cluster-info
        echo "KUBE_CONFIG=$(cat ~/.kube/config | base64 -w0)" >> $GITHUB_OUTPUT

    outputs:
      kubeconfig: ${{ steps.kubeconfig.outputs.KUBE_CONFIG }}

  build-and-push:
    needs: setup-cluster
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build and push images
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
          ${{ env.BACKEND_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [setup-cluster, build-and-push]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
        kubectl config current-context
        kubectl get nodes
      env:
        KUBE_CONFIG: ${{ needs.setup-cluster.outputs.kubeconfig }}

    - name: Deploy application
      run: |
        kubectl apply -f k8s/
        kubectl rollout status deployment/backend --timeout=180s
        kubectl rollout status deployment/frontend --timeout=180s

    - name: Get service URLs
      run: |
        echo "Backend: $(kubectl get svc backend-service -o jsonpath='{.spec.clusterIP}')"
        echo "Frontend: $(minikube service frontend-service --url)"
