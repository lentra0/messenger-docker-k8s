name: Deploy Messenger to Kubernetes

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE: ghcr.io/lentra0/messenger-docker-k8s-backend
  FRONTEND_IMAGE: ghcr.io/lentra0/messenger-docker-k8s-frontend

jobs:
  setup-cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y conntrack socat

    - name: Install Minikube and kubectl
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install kubectl /usr/local/bin/kubectl

    - name: Start Minikube cluster
      run: |
        minikube start --driver=docker --force
        # Явное ожидание инициализации
        sleep 30
        minikube status
        minikube kubectl -- get nodes

    - name: Prepare kubeconfig
      id: kubeconfig
      run: |
        mkdir -p ~/.kube
        # Явное создание контекста
        minikube update-context
        # Двойная проверка
        minikube kubectl -- config view --minify > ~/.kube/config
        kubectl config get-contexts
        echo "KUBE_CONFIG=$(cat ~/.kube/config | base64 -w0)" >> $GITHUB_OUTPUT

    outputs:
      kubeconfig: ${{ steps.kubeconfig.outputs.KUBE_CONFIG }}

  deploy:
    needs: setup-cluster
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
        kubectl config get-contexts
        kubectl cluster-info

      env:
        KUBE_CONFIG: ${{ needs.setup-cluster.outputs.kubeconfig }}

    - name: Deploy application
      run: |
        kubectl apply -f k8s/
        kubectl get pods -w
